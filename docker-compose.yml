version: "3.9"

services:
  proxy:
    image: nginx:alpine
    container_name: proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: "unless-stopped"
    networks:
      - backend

  server:
    container_name: server
    build:
      context: ./
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: pg
      POSTGRES_PORT: 5432
      POSTGRES_DB: dev
    volumes:
      - ./:/app
      - /app/node_modules
    restart: "unless-stopped"
    networks:
      - backend
    links:
      - pg
    depends_on:
      - pg

  pg:
    container_name: pg
    image: postgres:14.5-alpine
    hostname: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dev
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      - ./src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: "always"
    networks:
      - backend

  adminer:
    image: adminer
    restart: always
    hostname: adminer
    container_name: adminer
    networks:
      - backend
    ports:
      - 8080:8080

networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
